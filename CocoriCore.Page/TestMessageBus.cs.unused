using System;
using System.Threading.Tasks;
using CocoriCore;

namespace LeBonCoin
{

    public class TestMessageBus : IMessageBus
    {
        private readonly TestHandlerFinder handlerTypes;

        //private readonly IRepository repository;

        public TestMessageBus(
            TestHandlerFinder handlerTypes
            )
        {
            this.handlerTypes = handlerTypes;
            //this.authenticator = authenticator;
        }

        public async Task<object> ExecuteAsync(IMessage message)
        {
            var response = await FindHandlerAndExecute(message);
            return response;
        }

        public async Task<object> FindHandlerAndExecute(IMessage message)
        {
            var h = Activator.CreateInstance(this.handlerTypes.GetHandlerType(message));
            var response = await ((IHandler)h).HandleAsync(message);
            return response;
        }
    }



}